SOLID Principles
- The SOLID principles are five object-oriented design principles that help you write clean, scalable, and maintainable code.

S — Single Responsibility Principle = A class should have only one reason to change.
O — Open/Closed Principle = Software entities should be open for extension, but closed for modification.
L — Liskov Substitution Principle = Subtypes should be substitutable for their base types without breaking the app.
I — Interface Segregation Principle = Clients shouldn't be forced to depend on methods they do not use.
D — Dependency Inversion Principle = High-level modules should not depend on low-level modules. Both should depend on abstractions.